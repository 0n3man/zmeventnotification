# Configuration file for object detection

[general]
portal=https://yourportal/zm
user=admin
password=yourpassword

# path to store downloaded images
# needs to be RW www-data or apache
image_path=/var/detect/images

# choose any set of classes from here https://github.com/pjreddie/darknet/blob/master/data/coco.names
# for everything, make it .*
detect_pattern=(person|car|motorcycle|bus|truck|boat)
#detect_pattern=.*

# bestmatch, alarm, snapshot OR a specific frame ID
frame_id=bestmatch

# how much to resize the image before analysis
resize=800

# set to yes, if you want to remove images after analysis
# setting to yes is recommended to avoid filling up space
# keep to no while debugging/inspecting masks
delete_after_analyze=no

# whether confidence level of detection will be included
show_percent=no

# log level can be info,error,debug
log_level=debug

# This specifies the polygon area where object detection will be done
# follow [mask-<mid>]
# for each <mid> create a mask section and you can
# put in as many polygons as you want (mask1, mask2, mask3, etc...)
# Note that the coordinates are relative to the size of the downloaded monitor
# image and BEFORE resizing using the "resize" parameter above. So you can use
# the ZoneMinder Zone Editor to mark the polygon shapes
# BE CAUTIOUS about using the same zone polygons as ZM because you need to make
# sure the polygon is large enough to completely contain the object to be detected
# In ZM, the zones are often just enough to detect motion and object polygons will
# be larger

[mask-11]
#mask1=307,315 1276,295 1279,719 0,719

# config files for yolo
[yolo]
config=/var/detect/models/yolov3/yolov3.cfg
weights=/var/detect/models/yolov3/yolov3.weights
labels=/var/detect/models/yolov3/yolov3_classes.txt

# config params for HOG
[hog]
stride=(4,4)
padding=(8,8)
scale=1.05
mean_shift=-1



